import cv2

def find_contour_coordinates(image_path):
    # Read the image
    image = cv2.imread(image_path)
    
    # Check if the image was loaded successfully
    if image is None:
        print(f"Error: Unable to load image at {image_path}")
        return
    
    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Find contours in the grayscale image
    contours, _ = cv2.findContours(gray, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    
    # Iterate through all contours and print their coordinates
    for contour in contours:
        # Get coordinates of the contour
        for point in contour:
            x, y = point[0]
            print(f"Coordinate: ({x}, {y})")
    
    # Display the image with contours (optional)
    cv2.drawContours(image, contours, -1, (0, 255, 0), 2)
    cv2.imshow('Image with Contours', image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Example usage
if __name__ == "__main__":
    image_path = r"C:\Users\DINESH\Pictures\Screenshots\Screenshot 2024-06-21 125800.png"
    find_contour_coordinates(image_path)
