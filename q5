import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load the main image and the template image
main_image_path = r"C:/Users/DINESH/Pictures/Screenshots/Screenshot 2024-06-21 125800.png"
template_image_path =r"C:/Users/DINESH/Pictures/Screenshots/Screenshot 2024-05-17 195918.png"

main_image = cv2.imread(main_image_path)
template_image = cv2.imread(template_image_path)

# Check if the images were loaded successfully
if main_image is None or template_image is None:
    print("Error: Could not load images.")
    exit()

# Convert images to grayscale
main_gray = cv2.cvtColor(main_image, cv2.COLOR_BGR2GRAY)
template_gray = cv2.cvtColor(template_image, cv2.COLOR_BGR2GRAY)

# Template Matching
def template_matching(main_gray, template_gray):
    result = cv2.matchTemplate(main_gray, template_gray, cv2.TM_CCOEFF_NORMED)
    min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)
    top_left = max_loc
    h, w = template_gray.shape
    bottom_right = (top_left[0] + w, top_left[1] + h)
    cv2.rectangle(main_image, top_left, bottom_right, (0, 255, 0), 2)
    return main_image

# ORB Feature Matching
def orb_feature_matching(main_gray, template_gray):
    orb = cv2.ORB_create()
    keypoints1, descriptors1 = orb.detectAndCompute(template_gray, None)
    keypoints2, descriptors2 = orb.detectAndCompute(main_gray, None)
    bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)
    matches = bf.match(descriptors1, descriptors2)
    matches = sorted(matches, key=lambda x: x.distance)
    result_image = cv2.drawMatches(template_image, keypoints1, main_image, keypoints2, matches[:10], None, flags=cv2.DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS)
    return result_image

# Perform template matching
template_matched_image = template_matching(main_gray, template_gray)

# Perform ORB feature matching
orb_matched_image = orb_feature_matching(main_gray, template_gray)

# Display results
plt.figure(figsize=(20, 10))

plt.subplot(1, 2, 1)
plt.title('Template Matching Result')
plt.imshow(cv2.cvtColor(template_matched_image, cv2.COLOR_BGR2RGB))

plt.subplot(1, 2, 2)
plt.title('ORB Feature Matching Result')
plt.imshow(cv2.cvtColor(orb_matched_image, cv2.COLOR_BGR2RGB))

plt.show()
